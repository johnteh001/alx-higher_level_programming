Divide a matrix
===============
The following tests are applied:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Include mixed integers and float:
================================
>>> matrix_divided([[9.0, 2, 3], [4, 0.5, 6]], 3)
[[3.0, 0.67, 1.0], [1.33, 0.17, 2.0]]

Without parameters
==================
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
 
matrix with mixed type
======================
>>> matrix_divided([['monty', 8], [8, 9]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

rows with incosistent size
=========================
>>> matrix = [[2, 4, 5], [5,8], 9]
>>> matrix_divided(matrix, 2)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

single list
==========
>>> matrix_divided([6, 9, 18], 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
