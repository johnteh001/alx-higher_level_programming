# 0-add_integer.txt

The module is has only one function called ``add_integer(a, b=98)``.  

Numbers
=======
``add_integer(a, b=98)`` returns the sum of the arguments.

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(2, 4.3)
6
>>> add_integer(3, 6)
9
>>> add_integer(5.6, 8.8)
13
>>> add_integer(None)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(9, None)
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer((1, 2, 3), (4, 5, 6))
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer('str', 9)
Traceback (most recent call last):
TypeError: a must be an integer

>>> add_integer(8, 's')
Traceback (most recent call last):
TypeError: b must be an integer

>>> add_integer(0, float('nan'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer

>>> add_integer(float('inf'), float('-inf'))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer

>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(3)
101
